<%- include("../includes/header.ejs")%>
</head>
<body>
    <%- include("../includes/side-navigation.ejs")%>
    <main class="content">
        <section>
            <h1 class="page__title">Dashboard</h1>   
            <h2 class="page__greeting">Hello, <%= user.username %></h2>
            <button class="hamburger">
                <div class="bar"></div>
            </button>
            <div class="breakdown">
                <a href="/dashboard/tasks/all">
                    <div class="task__block task--all">
                        <h3 class="task__block--title">Tasks</h3>
                        <p class="task__block--count task-all--darkened"><%= tasks.length %></p>
                        <div class="task__overlay overlay--all">
                            <p class="overlay__text">View All</p>
                        </div>
                    </div>
                </a>
                <a href="/dashboard/tasks/all">
                    <div class="task__block task--pending">
                        <h3 class="task__block--title">Pending</h3>
                        <p class="task__block--count task-pending--darkened"><%= pendingTasks %></p>
                        <div class="task__overlay overlay--pending">
                            <p class="overlay__text">View All</p>
                        </div>
                    </div>
                </a>
                <a href="/dashboard/tasks/all">
                    <div class="task__block task--active">
                        <h3 class="task__block--title">Active</h3>
                        <p class="task__block--count task-active--darkened"><%= activeTasks %></p>
                        <div class="task__overlay overlay--active">
                            <p class="overlay__text">View All</p>
                        </div>
                    </div>
                </a>
                <a href="/dashboard/tasks/all">
                    <div class="task__block task--on-hold">
                        <h3 class="task__block--title">On Hold</h3>
                        <p class="task__block--count task-on-hold--darkened"><%= onHoldTasks %></p>
                        <div class="task__overlay overlay--on-hold">
                            <p class="overlay__text">View All</p>
                        </div>
                    </div>
                </a>
                <a href="/dashboard/tasks/all">
                    <div class="task__block task--in-review">
                        <h3 class="task__block--title">In Review</h3>
                        <p class="task__block--count task-in-review--darkened"><%= inReviewTasks %></p>
                        <div class="task__overlay overlay--in-review">
                            <p class="overlay__text">View All</p>
                        </div>
                    </div>
                </a>
                <a href="/dashboard/tasks/all">
                    <div class="task__block task--complete">
                        <h3 class="task__block--title">Completed</h3>
                        <p class="task__block--count task-complete--darkened"><%= completedTasks %></p>
                        <div class="task__overlay overlay--complete">
                            <p class="overlay__text">View All</p>
                        </div>
                    </div>
                </a>
                <a href="/dashboard/tasks/overdue">
                    <div class="task__block task--overdue">
                        <h3 class="task__block--title">Overdue</h3>
                        <p class="task__block--count task-overdue--darkened"><%= completedTasks %></p>
                        <div class="task__overlay overlay--overdue">
                            <p class="overlay__text">View All</p>
                        </div>
                    </div>
                </a>
            </div>
            <div class="charts">
                <div class="chart">
                    <canvas id="lineChart"></canvas>
                </div>
                <!-- <div class="chart chart--small">
                    <canvas id="pieChart"></canvas>
                </div> -->
            </div>
        </section>
    </main>
    <script>
        const lineChart = document.getElementById('lineChart');
        const pieChart = document.getElementById('pieChart');

        const today = new Date();
        let day = today.getDate();
        let month = today.getMonth() + 1;
        const year = today.getFullYear();

        const lastDayPrevMonth = new Date(today.getFullYear(), today.getMonth(), 0);

        const pastDays = [];

        for (let i = 5; i >= 0; i--) {
            if (day <= 1) {
                day = lastDayPrevMonth.getDate();
                month -= 1;
            }
            currDay = day - i;
            pastDays.push(month + '/' + currDay + '/' + year);
        }
        pastDays.push(month + 1 + '/' + today.getDate() + '/' + year);


        const getWeeklyTasks = async () => {
            let res = await fetch('/weeklyTasks');
            let data = await res.json();

            const weeklyTasks = Object.keys(data).map((val) => data[val]);

            return weeklyTasks;
        };

        const createPieChart = async () => {
            let res = await fetch('/getAllTasks');
            let data = await res.json();


            const newPieChart = new Chart(pieChart, {
                type: 'pie',
                data: {
                    labels: ['Red', 'Blue', 'Yellow'],
                    datasets: [
                        {
                            label: 'My First Dataset',
                            data: [300, 50, 100],
                            backgroundColor: [
                                'rgb(255, 99, 132)',
                                'rgb(54, 162, 235)',
                                'rgb(255, 205, 86)',
                            ],
                            hoverOffset: 4,
                        },
                    ],
                },
            });
        };

        const createLineChart = async () => {
            const weeklyTasks = await getWeeklyTasks();

            const newLineChart = new Chart(lineChart, {
                type: 'line',
                data: {
                    labels: pastDays,
                    datasets: [
                        {
                            label: '# of Complete Tickets',
                            data: weeklyTasks,
                            backgroundColor: '#643FDB',
                            borderColor: '#643FDB',
                            borderWidth: 3,
                        },
                    ],
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                        },
                    },
                },
            });
        };

        // createPieChart();
        createLineChart();

    </script>
<%- include("../includes/footer.ejs")%>